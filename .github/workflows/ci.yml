name: hello-world

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "âœ… GitHub Actions is working!"
# name: pytest-ci

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
#   workflow_dispatch:

# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     timeout-minutes: 30

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.10

#       - name: Install dependencies
#         run: pip install -r requirements.txt

#       # Optional: Start mock API if you include docker-compose
#       - name: Start mock server (optional)
#         run: |
#           if [ -f docker-compose.yml ]; then
#             sudo apt-get update -y
#             sudo apt-get install -y docker-compose
#             docker-compose up -d
#           else
#             echo "No docker-compose file found, skipping mock server."
#           fi

#       # Configure GCP credentials only if secret is provided
#       - name: Configure GCP credentials (optional)
#         if: ${{ secrets.GCP_SA_KEY }}
#         run: |
#           echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcp-key.json
#           echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV

#       - name: Run pytest
#         env:
#           API_BASE: ${{ secrets.API_BASE }}
#           BQ_PROJECT: ${{ secrets.BQ_PROJECT }}
#           BQ_DATASET: ${{ secrets.BQ_DATASET }}
#           BQ_TABLE: ${{ secrets.BQ_TABLE }}
#         run: |
#           pytest -q --maxfail=1 --disable-warnings || pytest_exit=$?
#           echo "pytest exit code: ${pytest_exit:-0}"

#           # Optional HTML report
#           if python -c "import importlib; importlib.import_module('pytest_html')" 2>/dev/null; then
#             pytest --html=report.html || true
#           fi
#           exit ${pytest_exit:-0}

#       - name: Upload pytest report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: pytest-report
#           path: report.html
